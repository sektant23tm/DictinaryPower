// <auto-generated />
using DictinaryPower.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DictinaryPower.DAL.Migrations
{
    [DbContext(typeof(DictinaryDB))]
    partial class DictinaryDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DictinaryPower.DAL.Entitiyes.ExampleSentence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnglishSentence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RussianSentence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TranslateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TranslateId");

                    b.ToTable("ExampleSentences");
                });

            modelBuilder.Entity("DictinaryPower.DAL.Entitiyes.GlobalWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GlobalWords");
                });

            modelBuilder.Entity("DictinaryPower.DAL.Entitiyes.PartOfSpeech", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PartOfSpeeches");
                });

            modelBuilder.Entity("DictinaryPower.DAL.Entitiyes.Translate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WordId");

                    b.ToTable("Translates");
                });

            modelBuilder.Entity("DictinaryPower.DAL.Entitiyes.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Forms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GlobalWordId")
                        .HasColumnType("int");

                    b.Property<int>("PartSpeechId")
                        .HasColumnType("int");

                    b.Property<string>("Transcription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GlobalWordId");

                    b.HasIndex("PartSpeechId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("DictinaryPower.DAL.Entitiyes.ExampleSentence", b =>
                {
                    b.HasOne("DictinaryPower.DAL.Entitiyes.Translate", "Translate")
                        .WithMany("ExampleSentences")
                        .HasForeignKey("TranslateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Translate");
                });

            modelBuilder.Entity("DictinaryPower.DAL.Entitiyes.Translate", b =>
                {
                    b.HasOne("DictinaryPower.DAL.Entitiyes.Word", "Word")
                        .WithMany("Translates")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Word");
                });

            modelBuilder.Entity("DictinaryPower.DAL.Entitiyes.Word", b =>
                {
                    b.HasOne("DictinaryPower.DAL.Entitiyes.GlobalWord", "GlobalWord")
                        .WithMany("Words")
                        .HasForeignKey("GlobalWordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DictinaryPower.DAL.Entitiyes.PartOfSpeech", "PartSpeech")
                        .WithMany("Words")
                        .HasForeignKey("PartSpeechId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GlobalWord");

                    b.Navigation("PartSpeech");
                });

            modelBuilder.Entity("DictinaryPower.DAL.Entitiyes.GlobalWord", b =>
                {
                    b.Navigation("Words");
                });

            modelBuilder.Entity("DictinaryPower.DAL.Entitiyes.PartOfSpeech", b =>
                {
                    b.Navigation("Words");
                });

            modelBuilder.Entity("DictinaryPower.DAL.Entitiyes.Translate", b =>
                {
                    b.Navigation("ExampleSentences");
                });

            modelBuilder.Entity("DictinaryPower.DAL.Entitiyes.Word", b =>
                {
                    b.Navigation("Translates");
                });
#pragma warning restore 612, 618
        }
    }
}
